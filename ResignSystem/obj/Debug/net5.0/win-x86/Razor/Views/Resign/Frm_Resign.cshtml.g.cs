#pragma checksum "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\Resign\Frm_Resign.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fe14c18ca2af381a6ce19c43edc082efbe30b5a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Resign_Frm_Resign), @"mvc.1.0.view", @"/Views/Resign/Frm_Resign.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\_ViewImports.cshtml"
using Import_Freight_BOI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\_ViewImports.cshtml"
using Import_Freight_BOI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fe14c18ca2af381a6ce19c43edc082efbe30b5a6", @"/Views/Resign/Frm_Resign.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3227ef76ccca694c120d9032a688aa75c02a1c4b", @"/Views/_ViewImports.cshtml")]
    public class Views_Resign_Frm_Resign : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\Resign\Frm_Resign.cshtml"
  
    ViewData["Title"] = "Employee Resign";
    Layout = "~/Layout/_MainMenu.cshtml";
    ViewData["SessionID"] = ViewBag.SessionID;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    input {
        margin-left: 0.5em;
        display: inline-block;
        width: auto;
        min-height: calc(1.5em + 0.5rem + 2px);
        padding: 0.25rem 0.5rem;
        font-size: .875rem;
        border-radius: 0.2rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
    }
    /*#datatables_previous {
        color: #6c757d;
        pointer-events: none;
        background-color: #fff;
        border-color: #dee2e6;
        text-decoration: none;
        border: 1px solid #dee2e6;
        padding: 1rem 1.5rem;
    }*/

    table.dataTable.table-striped > tbody > tr.odd > * {
        box-shadow: inset 0 0 0 9999px rgb(0 0 0 / 5%);
    }

    .table > :not(caption) > * > * {
        padding: 0.5rem 0.5rem;
        background-color: var(--bs-table-bg);
        border-bottom-width: 1px;
        box-shadow: inset 0 0 0 9999px va");
            WriteLiteral(@"r(--bs-table-accent-bg);
    }
    .current {
       
        color: #fff;
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    div.dataTables_wrapper div.dataTables_length select {
        border: solid 1px lightgray;
        padding: 5px;
    }
    /*.ellipsis {
        padding: 0.375rem 0.75rem;
        pointer-events: none;
        border-color: #dee2e6;
        border: 1px solid #dee2e6;
        padding: 1rem 1.2rem;
    }
    
   
    .paginate_button {
        padding: 0.375rem 0.75rem;
        pointer-events: none;
        border-color: #dee2e6;
        border: 1px solid #dee2e6;
        padding: 1rem 1.2rem;
    }
    #datatables_next {
        padding: 1rem 0.75rem;
        position: relative;
        color: #0d6efd;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid #dee2e6;
    }*/
    div.dataTables_wrapper {
        width: 100%;
        margin: 0 auto;
    }
    a {
        padding: 15px;
     ");
            WriteLiteral(@"   text-decoration: none;
    }
    #btn_DownloadTemplate{
        color:white;
    }

    div.dataTables_wrapper div.dataTables_paginate {
        margin: 0;
        white-space: nowrap;
        text-align: right;
        cursor: pointer;
        margin-top: -40px;
    }
    .wrapper {
        width: 60%;
        display: block;
        overflow: hidden;
        margin: 0 auto;
        padding: 60px 50px;
        background: #fff;
        border-radius: 4px;
    }

    canvas {
        background: #fff;
        height: 400px;
    }

   
</style>
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fe14c18ca2af381a6ce19c43edc082efbe30b5a67025", async() => {
                WriteLiteral(@"

        <div class=""container-fluid"">
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <i class=""mr-2 fa fa-align-justify""></i>
                            <strong class=""card-title"" v-if=""headerText"">Upload Operator resign</strong>
                        </div>
                        <div class=""card-body"">
                            <div class=""row"">
                               
                                <div class=""col-md-10"">  <input type=""file"" id=""FileUpload1"" multiple class=""form-control"" style=""height:auto;""/></div>
                                <div class=""col-md-2"">   <button type=""button"" style=""background: #4272d7; border: solid 1px #4272d7; "" name=""btn_upload"" id=""btn_upload"" class=""btn btn-success"">UPLOAD</button>   <button type=""button"" name=""btn_DownloadTemplate"" id=""btn_DownloadTemplate"" class=""btn btn-info"">TEMPLATE</button></");
                WriteLiteral(@"div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class=""row"">
                <div class=""col-md-6"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <i class=""mr-2 fa fa-align-justify""></i>
                            <strong class=""card-title"" v-if=""headerText"">Charts Operator resign</strong>
                        </div>

                        <div class=""card-body"">
                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <h3 class=""title-2 m-b-40"">Doughut Chart</h3>
");
                WriteLiteral(@"                                    <canvas id=""acquisition"" class=""chartjs""></canvas>
                                    <div id='customLegend' class='customLegend'></div>
                                </div>


                            </div>

                        </div>

                    </div>
                        <div class=""card"">
                            <div class=""card-header"">
                                <i class=""mr-2 fa fa-align-justify""></i>
                                <strong class=""card-title"" v-if=""headerText"">Data Resign</strong>
                            </div>

                            <div class=""card-body"">
                                <div class=""row"">

                                    <div class=""col-md-2"">Resign Date :   </div>
                                    <div class=""col-md-4"">   <select id=""Ddl_ResignDate"" class=""form-control"">

");
                WriteLiteral(@"                                                            </select></div>
                                    <div class=""col-md-4"">   <button type=""button"" style=""background: #4272d7; border: solid 1px #4272d7; "" name=""btn_Download"" id=""btn_Download"" class=""btn btn-success"">Download Report</button> </div>
");
                WriteLiteral(@"                               
                                    <div class=""col-md-2"">  </div>


                                </div>
                            </div>


                        </div>
                    </div>

                <div class=""col-md-6"">
                    <div class=""card"">

                        <div class=""card-header"">
                            <i class=""mr-2 fa fa-align-justify""></i>
                            <strong class=""card-title"" v-if=""headerText"">Resign Download</strong>
                        </div>

                        <div class=""card-body"">
                            <div class=""row"">

                                <table id=""datatables"" class=""table table-striped table-bordered""  style=""width:100%"">
                                    <thead>
                                        <tr>
                                            
                                            <th scope=""col"">OPID</th>
               ");
                WriteLiteral(@"                             <th scope=""col"">Name</th>
                                            <th scope=""col"">SurName</th>
                                            <th scope=""col"">Position</th>
                                            <th scope=""col"">Level</th>
                                            <th scope=""col"">Sect.</th>
                                            <th scope=""col"">Dept.</th>
                                            <th scope=""col"">Div.</th>
                                            <th scope=""col"">Hq.</th>
                                            <th scope=""col"">ResignDate</th>
                                            <th scope=""col"">ResignDateMaking</th>
                                            <th scope=""col"">OPIDMaking</th>

                                        </tr>
                                    </thead>
                                 
                                  
                                </table>



           ");
                WriteLiteral("                 </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <script>

        $(document).ready(function () {
            //swal({
            //    title: 'Now loading',
            //    allowEscapeKey: false,
            //    allowOutsideClick: false,
            //    onOpen: () => {
            //        swal.showLoading();
            //    }
            //});
            GetDataTables();
            getDdl_Resign();
           /* ChartsOperatorResign();*/
            document.body.style.zoom = 0.8
            NewCharts();
            


        });
        function NewCharts() {
            

            var acquisition = document.getElementById('acquisition')
                , label_month = [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""]
                , backgroundColor = ['rgb(50,226,255)', '#9684ff70', 'rgb(150, 132, 255)', 'rgb(250, 132, 255)']
                , borderColor = ['rgba(76, 132, 255,0)', 'rgba(254, 196, 0,0)', 'rgba(41, 204, 151,0)', 'rgb(250, 132, 255)']
                , ");
            WriteLiteral(@"labelName = []
                , datas = [];


            $.getJSON(document.location.origin + '/api/GetGroupOperatorResign', function (ResignGroup) {
                $.getJSON(document.location.origin + '/api/GetOperatorResignChart', function (ResignChart) {
                    
                    for (var i = 0; i < ResignGroup.length; i++) {
                        var arr_in = [];
                        const obj = {};
                        var arr_ = [];
                        obj[""label""] = ResignGroup[i].opHq;
                        obj[""backgroundColor""] = backgroundColor[i];
                        obj[""borderColor""] = borderColor[i];
                      

                        for (var l = 0; l < ResignChart.length; l++) {

                            if (ResignGroup[i].opHq == ResignChart[l].opHq) {
                               
                                /*arr_in.push([label_month[ResignChart[l].resignDateMaking - 1], ResignChart[l].nounOP, ResignChart[l].opHq");
            WriteLiteral(@" ]);*/
                                arr_in.push( ResignChart[l].nounOP);
                                
                            }

                        }

                        arr_.push(arr_in);
                        obj[""data""] = arr_in;
                        obj[""lineTension""] = 0.3;
                        obj[""pointBackgroundColor""] = 'rgba(76, 132, 255,0)';
                        obj[""pointHoverBackgroundColor""] = 'rgba(76, 132, 255,1)';
                        obj[""pointHoverRadius""] = 3;
                        obj[""pointHitRadius""] = 30;
                        obj[""pointBorderWidth""] = 2; 
                        obj[""pointStyle""] = 'rectRounded';
                        datas.push(obj);
                       

                    }
                 
                });
            });
            //console.log(arr_);

           /* console.log(arr_[0][0]);*/
            //var test = arr_[0];
            //console.log(test[0]);
            //for (var i");
            WriteLiteral(@" = 0; i < label_month.length; i++) {
            //    for (var l = 0; l < arr_.length; l++) {

            //        /*if (label_month[i] == arr_[l].)*/

            //    }
            //}
            console.log(datas);
            var acChart = new Chart(acquisition, {
                // The type of chart we want to create
                type: 'line',
               
                // The data for our dataset
                data: {
                    labels: label_month,
                    datasets: datas
                    //datasets: [
                      
                    //    {
                    //        label: ""A"", 
                    //        backgroundColor: 'rgb(50,226,255)',
                    //        borderColor: 'rgba(76, 132, 255,0)',
                    //        data: [48, 58, 38, 44, 10, 25, 5],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(76, 132, 255,0)',
                    //       ");
            WriteLiteral(@" pointHoverBackgroundColor: 'rgba(76, 132, 255,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: ''
                    //    },

                    //    {
                    //        label: ""Referral"",
                    //        backgroundColor: 'rgb(50, 132, 255)',
                    //        borderColor: 'rgba(76, 132, 255,0)',
                    //        data: [78, 88, 68, 74, 50, 55, 25],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(76, 132, 255,0)',
                    //        pointHoverBackgroundColor: 'rgba(76, 132, 255,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    },
     ");
            WriteLiteral(@"               //    {
                    //        label: ""Direct"",
                    //        backgroundColor: 'rgb(150, 132, 255)',
                    //        borderColor: 'rgba(254, 196, 0,0)',
                    //        data: [88, 108, 78, 95, 65, 73, 42],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(254, 196, 0,0)',
                    //        pointHoverBackgroundColor: 'rgba(254, 196, 0,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    },
                    //    {
                    //        label: ""Social"",
                    //        backgroundColor: 'rgb(250, 132, 255)',
                    //        borderColor: 'rgba(41, 204, 151,0)',
                    //        data: [103, 125, 95, 110, 79, 92, 58],
              ");
            WriteLiteral(@"      //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(41, 204, 151,0)',
                    //        pointHoverBackgroundColor: 'rgba(41, 204, 151,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    }
                    //]
                },

                // Configuration options go here
                options: {
                    legend: {
                        display: false
                    },

                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: true
                           ");
            WriteLiteral(@" },
                            ticks: {
                                beginAtZero: true,
                            },
                        }]
                    },
                    tooltips: {
                    }
                }
            });
            document.getElementById('customLegend').innerHTML = acChart.generateLegend();
        }

        function ChartsOperatorResign() {
            var ctx = document.getElementById(""ChartsOperatorResign"").getContext('2d');
            const data = {
                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Oct"", ""Nov"", ""Dec""],
                datasets: [{
                    label: 'Weekly Sales',
                    data: [18, 12, 6, 9, 12, 3, 9],
                    backgroundColor: [
                        'rgba(255, 26, 104, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
   ");
            WriteLiteral(@"                     'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(0, 0, 0, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 26, 104, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(0, 0, 0, 1)'
                    ],
                    borderWidth: 1
                }, {
                        label: 'Weekly Sales',
                        data: [5, 2, 2, 2, 3, 3, 2],
                        backgroundColor: [
                            'rgba(255, 26, 104, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                   ");
            WriteLiteral(@"         'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(0, 0, 0, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 26, 104, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(0, 0, 0, 1)'
                        ],
                        borderWidth: 1
                    }]
            };

            // config
            const config = {
                type: 'bar',
                data,
                options: {
                    tooltips: {
                        displayColors: true,
                        callbacks: {
                            mode: 'x',
                        },
          ");
            WriteLiteral(@"          },
                    scales: {
                        xAxes: [{
                            stacked: true,
                            gridLines: {
                                display: false,
                            }
                        }],
                        yAxes: [{
                            stacked: true,
                            ticks: {
                                beginAtZero: true,
                            },
                            type: 'linear',
                        }]
                    }
                }
            };
            const myChart = new Chart(
                document.getElementById('ChartsOperatorResign'),
                config
            );

        }
        function GetDataTables() {
            $('#datatables').DataTable({
                ajax: {
                    url: 'GetOperetorResign',
                    dataSrc: '',
                },
                paging: true,
                info: t");
            WriteLiteral(@"rue,
                scrollX: true,
                columns: [

                    { data: ""opid"" },
                    { data: ""opName"" },
                    { data: ""opSurName"" },
                    { data: ""opPosition"" },
                    { data: ""opLevel"" },
                    { data: ""opSect"" },
                    { data: ""opDept"" },
                    { data: ""opDiv"" },
                    { data: ""opHq"" },
                    { data: ""resignDate"" },
                    { data: ""resignDateMaking"" },
                    { data: ""opidMaking"" }
                ]
            });
        };

        function getDdl_Resign() {
            $.ajax({
                url: 'GetDdl_Resign',
                method: ""POST"",
                dataType: 'JSON',
                success: function (data) {

                    var content = '';
                    for (var i = 0; i < data.length; i++) {
                        content += '<option value=""' + data[i].resignDateMaking + '");
            WriteLiteral(@""">' + data[i].resignDateMaking + '</option>'
                    }
                    $(""#Ddl_ResignDate"").html(content);
                }
            });
        };
        $(""#btn_DownloadTemplate"").on(""click"", function () {
            swal.showLoading();
            /* window.location.href = 'C:\Users\010724\Desktop\Resignation_ 202207.xlsx';*/
            var formData = new FormData();
            $.ajax({
                url: '");
#nullable restore
#line 546 "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\Resign\Frm_Resign.cshtml"
                 Write(Url.Action("ExcelTemplate"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: ""POST"",
                processData: false,
                success: function (data) {
                    console.log(data);
                    swal.showLoading();
                        if (data.value != """") {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Download Success!',
                                showConfirmButton: true,
                                timer: 3500
                            })
                            
                            window.location.href = data;

                        } else {
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: 'Cannot Upload Please Exit to file or Contact Admin!',
                                showConfirmButton: true,
                   ");
            WriteLiteral(@"             timer: 3500
                            })

                        }

                    }
                });
        });

            $(""#btn_upload"").on(""click"", function () {
                var file = document.getElementById(""FileUpload1"")
                var formData = new FormData();
                var filess = file.files[0];
                formData.append('File', filess);

                $.ajax({
                    url: '");
#nullable restore
#line 585 "E:\Github\Freight_BOI\Freight_BOI\Import_Freight_BOI\Import_Freight_BOI\Views\Resign\Frm_Resign.cshtml"
                     Write(Url.Action("GetfileExcel"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    type: ""POST"",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (data) {
                        if (data.value != """") {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Upload Success!',
                                showConfirmButton: true,
                                timer: 3500
                            })
                            window.location.href = data.value;
                            GetDataTables();
                            getDdl_Resign();

                        } else {
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: 'Cannot Upload Please Exit to file or Contact Admin!',
  ");
            WriteLiteral(@"                              showConfirmButton: true,
                                timer: 3500
                            })

                        }

                    }
                });

            });

        $(""#btn_Download"").on(""click"", function () {
            var Ddl_resignDate = $(""#Ddl_ResignDate"").val();

            $.ajax({
                url: 'GetExcel_Ddl_resignDate',
                method: 'POST',
                data: { resignDate: Ddl_resignDate },
                dataType: ""JSON"",
                success: function (data) {


                    if (data.value != """") {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Download Success!',
                            showConfirmButton: true,
                            timer: 3500
                        })
                        window.location.href = data.value;
                  ");
            WriteLiteral(@"      //GetDataTables();
                        //getDdl_Resign();

                    } else {
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Cannot Download Please Exit to file or Contact Admin!',
                            showConfirmButton: true,
                            timer: 3500
                        })

                    }


                }

            })
        });

    </script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
