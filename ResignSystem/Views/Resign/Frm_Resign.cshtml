
@{
    ViewData["Title"] = "Employee Resign";
    Layout = "~/Layout/_MainMenu.cshtml";
    ViewData["SessionID"] = ViewBag.SessionID;
}

<style>
    input {
        margin-left: 0.5em;
        display: inline-block;
        width: auto;
        min-height: calc(1.5em + 0.5rem + 2px);
        padding: 0.25rem 0.5rem;
        font-size: .875rem;
        border-radius: 0.2rem;
        font-weight: 400;
        line-height: 1.5;
        color: #212529;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
    }
    /*#datatables_previous {
        color: #6c757d;
        pointer-events: none;
        background-color: #fff;
        border-color: #dee2e6;
        text-decoration: none;
        border: 1px solid #dee2e6;
        padding: 1rem 1.5rem;
    }*/

    table.dataTable.table-striped > tbody > tr.odd > * {
        box-shadow: inset 0 0 0 9999px rgb(0 0 0 / 5%);
    }

    .table > :not(caption) > * > * {
        padding: 0.5rem 0.5rem;
        background-color: var(--bs-table-bg);
        border-bottom-width: 1px;
        box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
    }
    .current {
       
        color: #fff;
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    div.dataTables_wrapper div.dataTables_length select {
        border: solid 1px lightgray;
        padding: 5px;
    }
    /*.ellipsis {
        padding: 0.375rem 0.75rem;
        pointer-events: none;
        border-color: #dee2e6;
        border: 1px solid #dee2e6;
        padding: 1rem 1.2rem;
    }
    
   
    .paginate_button {
        padding: 0.375rem 0.75rem;
        pointer-events: none;
        border-color: #dee2e6;
        border: 1px solid #dee2e6;
        padding: 1rem 1.2rem;
    }
    #datatables_next {
        padding: 1rem 0.75rem;
        position: relative;
        color: #0d6efd;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid #dee2e6;
    }*/
    div.dataTables_wrapper {
        width: 100%;
        margin: 0 auto;
    }
    a {
        padding: 15px;
        text-decoration: none;
    }
    #btn_DownloadTemplate{
        color:white;
    }

    div.dataTables_wrapper div.dataTables_paginate {
        margin: 0;
        white-space: nowrap;
        text-align: right;
        cursor: pointer;
        margin-top: -40px;
    }
    .wrapper {
        width: 60%;
        display: block;
        overflow: hidden;
        margin: 0 auto;
        padding: 60px 50px;
        background: #fff;
        border-radius: 4px;
    }

    canvas {
        background: #fff;
        height: 400px;
    }

   
</style>
    <form method="post" enctype="multipart/form-data">

        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <i class="mr-2 fa fa-align-justify"></i>
                            <strong class="card-title" v-if="headerText">Upload Operator resign</strong>
                        </div>
                        <div class="card-body">
                            <div class="row">
                               
                                <div class="col-md-10">  <input type="file" id="FileUpload1" multiple class="form-control" style="height:auto;"/></div>
                                <div class="col-md-2">   <button type="button" style="background: #4272d7; border: solid 1px #4272d7; " name="btn_upload" id="btn_upload" class="btn btn-success">UPLOAD</button>   <button type="button" name="btn_DownloadTemplate" id="btn_DownloadTemplate" class="btn btn-info">TEMPLATE</button></div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <i class="mr-2 fa fa-align-justify"></i>
                            <strong class="card-title" v-if="headerText">Charts Operator resign</strong>
                        </div>

                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <h3 class="title-2 m-b-40">Resign Chart</h3>
                                    @*<canvas id="ChartsOperatorResign"></canvas>*@
                                    @*<canvas id="acquisition" class="chartjs"></canvas>*@
                                    <canvas id="chart_01" class="chartjs" style="padding-left:5%"> </canvas>
                                    @*<div id='customLegend' class='customLegend'></div>*@
                                </div>


                            </div>

                        </div>

                    </div>
                        <div class="card">
                            <div class="card-header">
                                <i class="mr-2 fa fa-align-justify"></i>
                                <strong class="card-title" v-if="headerText">Data Resign</strong>
                            </div>

                            <div class="card-body">
                                <div class="row">

                                    <div class="col-md-2">Resign Date :   </div>
                                    <div class="col-md-4">   <select id="Ddl_ResignDate" class="form-control">

                                                                @*@foreach (var item in ViewData.Model)
                                                                {
                                                                    <option value="@item["ResignDateMaking"]">@item["ResignDateMaking"]</option>
                                                                }*@
                                                            </select></div>
                                    <div class="col-md-4">   <button type="button" style="background: #4272d7; border: solid 1px #4272d7; " name="btn_Download" id="btn_Download" class="btn btn-success">Download Report</button> </div>
                                    @*@Html.DropDownList("Mobiledropdown1" , "Select Mobile");*@
                               
                                    <div class="col-md-2">  </div>


                                </div>
                            </div>


                        </div>
                    </div>

                <div class="col-md-6">
                    <div class="card">

                        <div class="card-header">
                            <i class="mr-2 fa fa-align-justify"></i>
                            <strong class="card-title" v-if="headerText">Resign Download</strong>
                        </div>

                        <div class="card-body">
                            <div class="row">

                                <table id="datatables" class="table table-striped table-bordered"  style="width:100%">
                                    <thead>
                                        <tr>
                                            
                                            <th scope="col">OPID</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">SurName</th>
                                            <th scope="col">Position</th>
                                            <th scope="col">Level</th>
                                            <th scope="col">Sect.</th>
                                            <th scope="col">Dept.</th>
                                            <th scope="col">Div.</th>
                                            <th scope="col">Hq.</th>
                                            <th scope="col">ResignDate</th>
                                            <th scope="col">ResignDateMaking</th>
                                            <th scope="col">OPIDMaking</th>

                                        </tr>
                                    </thead>
                                 
                                  
                                </table>



                            </div>
                        </div>



                    </div>
                </div>
            </div>


        </div>
    </form>
    <script>

        $(document).ready(function () {

            /*ChartResign();*/
            //swal({
            //    title: 'Now loading',
            //    allowEscapeKey: false,
            //    allowOutsideClick: false,
            //    onOpen: () => {
            //        swal.showLoading();
            //    }
            //});
            GetDataTables();
            getDdl_Resign();
           /* ChartsOperatorResign();*/
            document.body.style.zoom = 0.8
            /*NewCharts();*/
            
           

        });
        function NewCharts() {
            

            var acquisition = document.getElementById('acquisition')
                , label_month = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                , backgroundColor = ['rgb(50,226,255)', '#9684ff70', 'rgb(150, 132, 255)', 'rgb(250, 132, 255)']
                , borderColor = ['rgba(76, 132, 255,0)', 'rgba(254, 196, 0,0)', 'rgba(41, 204, 151,0)', 'rgb(250, 132, 255)']
                , labelName = []
                , datas = [];


            $.getJSON(document.location.origin + '/api/GetGroupOperatorResign', function (ResignGroup) {
                $.getJSON(document.location.origin + '/api/GetOperatorResignChart', function (ResignChart) {
                    console.log(document.location.origin + '/api/GetGroupOperatorResign');
                    for (var i = 0; i < ResignGroup.length; i++) {
                        var arr_in = [];
                        const obj = {};
                        var arr_ = [];
                        obj["label"] = ResignGroup[i].opHq;
                        obj["backgroundColor"] = backgroundColor[i];
                        obj["borderColor"] = borderColor[i];
                      

                        for (var l = 0; l < ResignChart.length; l++) {

                            if (ResignGroup[i].opHq == ResignChart[l].opHq) {
                               
                                /*arr_in.push([label_month[ResignChart[l].resignDateMaking - 1], ResignChart[l].nounOP, ResignChart[l].opHq ]);*/
                                arr_in.push( ResignChart[l].nounOP);
                                
                            }

                        }

                        arr_.push(arr_in);
                        obj["data"] = arr_in;
                        obj["lineTension"] = 0.3;
                        obj["pointBackgroundColor"] = 'rgba(76, 132, 255,0)';
                        obj["pointHoverBackgroundColor"] = 'rgba(76, 132, 255,1)';
                        obj["pointHoverRadius"] = 3;
                        obj["pointHitRadius"] = 30;
                        obj["pointBorderWidth"] = 2; 
                        obj["pointStyle"] = 'rectRounded';
                        datas.push(obj);
                       

                    }
                 
                });
            });
            //console.log(arr_);

           /* console.log(arr_[0][0]);*/
            //var test = arr_[0];
            //console.log(test[0]);
            //for (var i = 0; i < label_month.length; i++) {
            //    for (var l = 0; l < arr_.length; l++) {

            //        /*if (label_month[i] == arr_[l].)*/

            //    }
            //}
            console.log(datas);
            var acChart = new Chart(acquisition, {
                // The type of chart we want to create
                type: 'line',
               
                // The data for our dataset
                data: {
                    labels: label_month,
                    datasets: datas
                    //datasets: [
                      
                    //    {
                    //        label: "A", 
                    //        backgroundColor: 'rgb(50,226,255)',
                    //        borderColor: 'rgba(76, 132, 255,0)',
                    //        data: [48, 58, 38, 44, 10, 25, 5],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(76, 132, 255,0)',
                    //        pointHoverBackgroundColor: 'rgba(76, 132, 255,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: ''
                    //    },

                    //    {
                    //        label: "Referral",
                    //        backgroundColor: 'rgb(50, 132, 255)',
                    //        borderColor: 'rgba(76, 132, 255,0)',
                    //        data: [78, 88, 68, 74, 50, 55, 25],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(76, 132, 255,0)',
                    //        pointHoverBackgroundColor: 'rgba(76, 132, 255,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    },
                    //    {
                    //        label: "Direct",
                    //        backgroundColor: 'rgb(150, 132, 255)',
                    //        borderColor: 'rgba(254, 196, 0,0)',
                    //        data: [88, 108, 78, 95, 65, 73, 42],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(254, 196, 0,0)',
                    //        pointHoverBackgroundColor: 'rgba(254, 196, 0,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    },
                    //    {
                    //        label: "Social",
                    //        backgroundColor: 'rgb(250, 132, 255)',
                    //        borderColor: 'rgba(41, 204, 151,0)',
                    //        data: [103, 125, 95, 110, 79, 92, 58],
                    //        lineTension: 0.3,
                    //        pointBackgroundColor: 'rgba(41, 204, 151,0)',
                    //        pointHoverBackgroundColor: 'rgba(41, 204, 151,1)',
                    //        pointHoverRadius: 3,
                    //        pointHitRadius: 30,
                    //        pointBorderWidth: 2,
                    //        pointStyle: 'rectRounded'
                    //    }
                    //]
                },

                // Configuration options go here
                options: {
                    legend: {
                        display: false
                    },

                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: true
                            },
                            ticks: {
                                beginAtZero: true,
                            },
                        }]
                    },
                    tooltips: {
                    }
                }
            });
            document.getElementById('customLegend').innerHTML = acChart.generateLegend();



        }

        function ChartResign(data) {
          
            var arr = [];
            var monthname = ["Jan.", "Feb.", "Mar.", "Apr.", "May", "June", "July", "Aug.", "Sept.", "Oct.", "Nov.", "Dec."];
            var arr_BackgroudColor = ['rgb(66, 114, 215 ,0.1)', "rgb(66, 114, 215 ,0.7)", "rgb(66, 114, 215 ,0.5)", "rgb(66, 114, 215 ,0.3)"];
            var labels = ["Daily", "ADMIN.", "Discrete Prod.", "LSI Prod."];
          
            for (var i = 0; i < data.length; i++) {
                var datemake = data[i].resignDateMaking;
                arr.push(monthname[datemake.substring(0, 2) - 1]);
            }
            console.log(arr);
            var datas = [];
            $.getJSON(document.location.origin + '/api/GetGroupOperatorResign', function (ResignGroup) {
                $.getJSON(document.location.origin + '/api/GetOperatorResignChart', function (ResignChart) {
                    console.log(document.location.origin + '/api/GetOperatorResignChart');
                    console.log(ResignChart);
                    for (var i = 0; i < ResignGroup.length; i++) {
                        var arr_in = [];
                        const obj = {};
                        var arr_ = [];
                   
                        for (var l = 0; l < ResignChart.length; l++) {

                            if (ResignGroup[i].opHq == ResignChart[l].opHq) {
                                arr_in.push(ResignChart[l].nounOP);
                               

                            }

                        }
                        console.log(arr_in);
                        //arr_.push(arr_in);
                        //obj["data"] = arr_in;
                        //obj["backgroundColor"] = 'rgb(66, 114, 215 ,5)';
                        //obj["borderColor"] = 'rgba(168, 227, 215, 1)';
                        //obj["borderWidth"] = 1;
                        //datas.push(obj);

                        arr_.push(arr_in);
                        obj["label"] = ResignGroup[i].opHq;
                        obj["data"] = arr_in;
                        obj["backgroundColor"] = arr_BackgroudColor[i];
                        obj["borderColor"] = "rgba(168, 227, 215, 1)";
                        obj["borderWidth"] = 1;
                        obj["fill"] = true;
                        obj["tension"] = 0.4;
                        datas.push(obj);


                    }

                });
            });

            console.log(datas);
            var ctx = document.getElementById("chart_01").getContext("2d");
            Chart.defaults.global.defaultFontColor = "#73879C";
            var chart_01 = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: arr,
                  /*  datasets: [ datas ]*/
                    datasets: datas,

                }
                //options: {
                //    responsive: true,
                //    plugins: {
                //        legend: {
                //            position: 'bottom'
                //        },
                //        title: {
                //            display: true,
                //            text: 'Chart.js Line Chart'
                //        }
                //    }
                //},
                //pointDotRadius: 10,
                //bezierCurve: false,
                //scaleShowVerticalLines: false,
                //scaleShowGridLines: false,

            });

        }

        function ChartsOperatorResign() {
            var ctx = document.getElementById("ChartsOperatorResign").getContext('2d');
            const data = {
                labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: 'Weekly Sales',
                    data: [18, 12, 6, 9, 12, 3, 9],
                    backgroundColor: [
                        'rgba(255, 26, 104, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(0, 0, 0, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 26, 104, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(0, 0, 0, 1)'
                    ],
                    borderWidth: 1
                }, {
                        label: 'Weekly Sales',
                        data: [5, 2, 2, 2, 3, 3, 2],
                        backgroundColor: [
                            'rgba(255, 26, 104, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(0, 0, 0, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 26, 104, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(0, 0, 0, 1)'
                        ],
                        borderWidth: 1
                    }]
            };

            // config
            const config = {
                type: 'bar',
                data,
                options: {
                    tooltips: {
                        displayColors: true,
                        callbacks: {
                            mode: 'x',
                        },
                    },
                    scales: {
                        xAxes: [{
                            stacked: true,
                            gridLines: {
                                display: false,
                            }
                        }],
                        yAxes: [{
                            stacked: true,
                            ticks: {
                                beginAtZero: true,
                            },
                            type: 'linear',
                        }]
                    }
                }
            };
            const myChart = new Chart(
                document.getElementById('ChartsOperatorResign'),
                config
            );

        }
        function GetDataTables() {
            $('#datatables').DataTable({
                ajax: {
                    url: 'GetOperetorResign',
                    dataSrc: '',
                },
                paging: true,
                info: true,
                scrollX: true,
                columns: [

                    { data: "opid" },
                    { data: "opName" },
                    { data: "opSurName" },
                    { data: "opPosition" },
                    { data: "opLevel" },
                    { data: "opSect" },
                    { data: "opDept" },
                    { data: "opDiv" },
                    { data: "opHq" },
                    { data: "resignDate" },
                    { data: "resignDateMaking" },
                    { data: "opidMaking" }
                ]
            });
        };

        function getDdl_Resign() {
            $.ajax({
                url: 'GetDdl_Resign',
                method: "POST",
                dataType: 'JSON',
                success: function (data) {

                    var content = '';
                    for (var i = 0; i < data.length; i++) {
                        content += '<option value="' + data[i].resignDateMaking + '">' + data[i].resignDateMaking + '</option>'
                    }
                    $("#Ddl_ResignDate").html(content);
                    ChartResign(data);
                }
            });
        };
        $("#btn_DownloadTemplate").on("click", function () {
            swal.showLoading();
            /* window.location.href = 'C:\Users\010724\Desktop\Resignation_ 202207.xlsx';*/
            var formData = new FormData();
            $.ajax({
                url: '@Url.Action("ExcelTemplate")',
                type: "POST",
                processData: false,
                success: function (data) {
                    console.log(data);
                    //swal.showLoading();
                    //    if (data.value != "") {
                    //        Swal.fire({
                    //            position: 'center',
                    //            icon: 'success',
                    //            title: 'Download Success!',
                    //            showConfirmButton: true,
                    //            timer: 3500
                    //        })
                            
                    //        window.location.href = data;

                    //    } else {
                    //        Swal.fire({
                    //            position: 'center',
                    //            icon: 'error',
                    //            title: 'Cannot Upload Please Exit to file or Contact Admin!',
                    //            showConfirmButton: true,
                    //            timer: 3500
                    //        })

                    //    }

                    }
                });
        });

            $("#btn_upload").on("click", function () {
                var file = document.getElementById("FileUpload1")
                var formData = new FormData();
                var filess = file.files[0];
                formData.append('File', filess);

                $.ajax({
                    url: '@Url.Action("GetfileExcel")',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    success: function (data) {
                        if (data.value != "") {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Upload Success!',
                                showConfirmButton: true,
                                timer: 3500
                            })
                            window.location.href = data.value;
                            GetDataTables();
                            getDdl_Resign();

                        } else {
                            Swal.fire({
                                position: 'center',
                                icon: 'error',
                                title: 'Cannot Upload Please Exit to file or Contact Admin!',
                                showConfirmButton: true,
                                timer: 3500
                            })

                        }

                    }
                });

            });

        $("#btn_Download").on("click", function () {
            var Ddl_resignDate = $("#Ddl_ResignDate").val();

            $.ajax({
                url: 'GetExcel_Ddl_resignDate',
                method: 'POST',
                data: { resignDate: Ddl_resignDate },
                dataType: "JSON",
                success: function (data) {


                    if (data.value != "") {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Download Success!',
                            showConfirmButton: true,
                            timer: 3500
                        })
                        window.location.href = data.value;
                        //GetDataTables();
                        //getDdl_Resign();

                    } else {
                        Swal.fire({
                            position: 'center',
                            icon: 'error',
                            title: 'Cannot Download Please Exit to file or Contact Admin!',
                            showConfirmButton: true,
                            timer: 3500
                        })

                    }


                }

            })
        });

    </script>

